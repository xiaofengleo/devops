sudo: required
services:
- docker
language: python
python:
- '3.2'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- nosetests
- docker build -t my_docker_reposetory/swagger_server:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 my/swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag my_docker_reposetory/swagger-spring-example:1.0.0 my_docker_reposetory/swagger-spring-example:1.0.0
- docker push my_docker_reposetory/swagger-spring-example:1.0.0
env:
  global:
  - secure: l8n5AFwAY/XD9saNc3FQp+t2azZ2JeKPlIs4JCLH86v4hhpxZbpQpZPAjCddCH/5eFFaxrGRI7GCltvZzO2Z4eQVSUH8NREYXhgMUnWv8DKup/g4cs9ZLd1B6kIlY7gIDonrzogTFO040x3k3Zt6b6xdn3hA186Q+JwYMj42E7j/F4VGD0nFr11PpqOOdBC7Sp/0ERhT0y2gcucCu9tWRzylYyufjfkmm4KCa8HwaCC7Iyw29kd2azZyZ1xRuzhKI7zb4XwAKRfbMN+YnEID1lAUvUJUrlatfbh4uTQA1MfLXo7NqIjwKaiNdp9GzJlw9CBKxFPY5pSPt2YwfznFAla8YkjQXFEadraYbAjnVJ8cPY4jT16OzWMCXHJdWSvr4xEG6z3SZGgRs+yEMoRTfhBn6IxucTx6QdMVG7cPauE+V3jxr2HrXMQ4AZSOh0mhdPi1yOSNQX/JDarj08VtNy35B4yPdZrKDQ/sYOm4FYRwNIknCitII2jdGygH/bnVOH/PIG1XMYtz32dsDfGeP3Zs5me0iiNSCWpDy+LVPj5PEQ7OzMNDQF9AmuIvmm6wXl0LrTKYWOe+p6zbK6lfd43+UmSYbzUo52pzdIaixbc1umifAObu/xvLCc5ovgO4JDW9RQU9QmOoGSEnoLKO2VBaZDMNo8YdRfzkQoUezHg=
  - secure: jdlP6PVuweFuQSInLAjyJycKPwlvQqXprLK8N5UwmxNRSAwMGPy/lF8qN6RXbqEFzVUnpl++Y3kENYag0If82m+ZtmTaPZksgDkSJj7UmTjNY6ETxwi9jVuxr2sASjRlPJTR63Ih7Ns97DJ4hYYBfXKP0FVfqc82SF2H0adIa80p2iyEw+lvSR5/hA9rhtPjqjCdfVUKMtf1di8xshQdxOvOxV3OgjM5dUHF3NTNYVPb5ZdEvleMfYwfE77BzpfiiXO0onBRG/oMA0hGXVef5gQsw1ETcdw2ZQtKx6Utbjw6giN8Imx4D8O+AoI0PoWP3k001pgdihWFQVyu0sJkcXUcrOtHRzJPocjyNnq/IyrnxDAeu6LTrnMcdzykyXRMp8Pk/DCjqQDvDuvoYO0XVHzckR1e/KK1rhmxBP4ffDryQ2rpCUALRb5BPV+tQyiI1m4yBdz23Ok1xs907aiOswVAqj554o6g1AbOqSmA9Kvs1U9YYCnQ0Ala2y4fU9qIcvCReAjzxrP4XCk3FiHLj8Y2e77v4M9xmK5ezDm1+d5kVrGuo1e0sCPCl5xfKb3DzvZAkcOiExZEbvHD7/S1nEN1lHCWikPxgRxiPSkLHK/ZbnxxLOznR8BAHtN7q3R7qOlgys/c/ilqXtEPNJU1YogmUFlX5O8Itv/P5ZPhi0c=
  - secure: KiYYT6AmHIA1AAdn1l+mME4wAkkX/A6BSUTGJExadWHcb+62fFePUWX7T39PFPjqCfGrfd7D4vTH88Qnvmaon1rP5dGiGEymsYTBBrc9fbLNCsQK2k4WAsGQfhd1HyH7MoRVDmnmKe21axLNKRez/EUjHoMYNM8J96LVwDJSrAZTMrd+9LI21GuGrFRJklBpWVIDwSU8xIMTJ6kZfNSHLYFhLR1qyYTZK/cnn/P17XV82R4e3KdWDaLoOZ6cdc3K3cHR4Bdogb9JZwZjM2R2NUQoH+EQcMp5gzldPIyn8R1y+MYa3rA+Dkr3zZKh9FGf1D8GL9JPPEVowpK17vKjEJR+WiyG9epPu4qeomscqQJv8K1EVs4StIm/09Q6gThs4xOG58g3mIQBZANikq1Oc6RxBoPpvjUJJSbvb0WJ6yjYjCGCqaS4sBVlQ6IN4hBu6Hhgik7fUFM4i3wCMohuoqj5nP7hw3KZHbM+8SAxNBcNJHKg/E8rxJgt2DpR36C2vHeJaqx3SJe0GtVT5KG8SHkgI0RSa1Q7fRPR9Rn1BcJfIJ4xMbCWN+Jo+9y/9jaCr/xbCm7HGidzeBnrszctvg05uRzrsGuJjkxadEclbzLs65mhPHKWcIDsLbVM4Shr/LuLTb+oa7Ydu6IMb4lS0sdr8KTawtrz8KcY4HQ9tEk=
  - secure: wS4sbGn79/naaUttY3dz9C5bdv1GTpkTqAXq+1gbzh5AcP/TIivKUDwDfX5FKzEB3IRQibaW9aQ0AN4PwnBHOrGwoUMgowOgsqoOJgLSxpCTMUhdLxEkHcN4dasLFDcwvWM2vV++tMldc0hPDkgmA7gIzWlasg76S+0tA+v7qjrue71O2urz9EtCP0Kget1eq1gTcjPfC+CkKo3edYQ2hxDy+H7+YuGkWoNNvoGbQE5FzkBszClX531oZdt5x9L+DHx6VBWe+x+YXp88xhtUnHKEX+KeoybWqiXBVmepHyvqDgAYgEAfYJjF8SK6JKPKWBEXb+Qmzl6mNcGVokX0GnFOzE5c/hlJYYB639pdZi4Q4qUppnPx964wiFFemMQ2YN5cNvT2k559Wga8QpbaIsIEFxv9P3OUQc9yfaqn4mOJXjtiYVMNTE9LESecHlECJzrvxyCse//JUmq4hC31oX5A8/wnsmz8mewOM0mkhDckDqLSVyimq2g8OnclmwPt3d1d2Y56JDTzPMxc8ue9vzWO41HTVI/MXORaQXSOv1ENEhyxHTv0bH7GrrEOtibqoMf3Wt749bmdwGVCrkjgahF4Oic+xoeIQtkdOz4BQ5il0z44QGM6eXhtOHlyypMbk71gcC3Q2qMJYmqIOKbQLjRgLTLVtY1CRsp2s7sPJ68=
  - secure: N2SkDa8W5XsU2ICAV2XMbhYdgi9leYwuf1R4WoykaQOhmRV6Z4sQ/kY8a/u5c+BcE379aQbvynxu5x7Z+1Gh6reEvGu/pHxcGiYWBmXUPblPUYh4+Of7HOqVFFqrRW8z+y2gvj5Yv+s3W4zFoZxrtIDb1Pvgi56zdauz7s5WThomukyCcDgsV3jwzWREyavnIdKX3qd6qfykav0K0YLpE+/eIzrlu2rh+i5Esxc13S6Bgr9JykEs3az5ayxUXCMxgNLiaAUuFE9I9GS5cc0Xcxse5ZME996C/jXZCRlZTzHVwXiOC3yzqjdUjpD/UTtPX39CyD2043JsPO+Rfyry/kp2qGeipSxmusLeYod7PDcrvyL+HvEQNaVgCy0Cx6wxXbyZ9w6IwGhisp/8QCxXVXgmS/bI27r+pNb0F6wShZWNY/y+IE7xxVbiSjeBTmrCxFXBdThKmSf6ZcJBXFcd2s/mW83Bw891/W/F2KB0BFwoVQZyDeVSkT87tlGp91HhDfwKpSjzdM/yxB0PQPpzwc1wYC4oklPrxLdIgUa5XoZHuDYo+rbjtK08UAonnJ25hfH/gpWYpzJbdiP/NVgmXZx/FibDeBkIMrquH+n9wFMgpD0PoZanx3BMcC1seUF1KP5ARlgGaBspudzgoE0MQwy2S5qjOx70obMz01avTcg=
