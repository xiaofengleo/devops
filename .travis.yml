sudo: required
services:
- docker
language: python
python:
- '3.5'
before_install:
- docker version
- docker info
install:
- pip install nose
- pip install Flask-Testing
- npm install newman
- pip install -r requirements.txt
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- nosetests
- docker build -t liaoxiaofeng/devops-docker:swagger_server .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 liaoxiaofeng/devops-docker:swagger_server
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag liaoxiaofeng/devops-docker:swagger_server liaoxiaofeng/devops-docker:swagger_server
- docker push liaoxiaofeng/devops-docker:swagger_server
env:
  global:
  - secure: kq8Xhh0nIp3P4U0oh28LMbA51DsLk8Fng7VeRXBG6Xw/ik8wC6bzN8fAjQW0xSIju1Eq80mW23d0mRM5jwFoy/11SNYtq0kIqCxtglh1tgXKrHOqlgDf4OYXBtii3oeQVnAZw5IooiOITo28Ltgdsoher2IImAhgWLzlXSrigrpsxc3GRLVBPwwJ7XgxtxCKojqzcrb7JbJu6Jdi5bhLmlj1TalXQ3xfuqwPB+LjhcH/Va+oSzwBjl30YaafGPGzhcjLEUwJQZLGXcl4IGVJ0bEcjy1jqfXX5VVriVAF3b+9G3UMhh/wkpDVpKIc4X/eRVJ8+Q3lPw1NJxQxnIGHPPQtuYFAQCcQmUHz+5IPy3rmX2RpN1Rc5FngCQk2Gg3L/JZLXrIl7zoGNaCs99m8fHPib6KnM7+PQ1Lrtk86ptW6/32ppJKyN3JkopoUdaYD6Nw4S06KxZXiqY94u8ngGsTmmDDI+UxrDFuT5xYfAUp13FPckYZJSqSC6ibKJ/irno4ebAh4w5wTvL3SswrgAPKqrYaOzd/jYEOBwhoW8iAGJiYEsrCcMPF0D9+dBKO5pv6INRw1gbQoeyl8iUKSWzB1DczFP/s6iRQFQO6SlZh50QBwKM9n4pWI+6K30TG+C2NIQoZSK+7Jn6lyzXi+dZqn8Lp3ahZS0aerMkU/e70=
  - secure: PqBgr9paCeU3uoTBqr5HYUpIx4gthsNE90oLj7WJ4QG+/yd3DujmLbMNQ2pkjyXcFoW1GwAy5s/2ylf+yVjr7pCuGfnQQ+3//wXbbxMDEJj05TJNFCSsfhwGBgAamEEM83n6m5654v57kVgdwQbQlhgfi2+tivRlFmoTljymsHy39HECcucyc+0EzeY4rUIwkaF0xJww/1eCcuZjrGNpHAsdCjd444ePUNzdKeRfpR9K795VVVLWwIbeHJIrCUJwb6HoiEm9FdRDHp32wvSoPnUP7VJ+92mbUCKDluhduXSg8OY0RhTka2zk3rmrAjCQ/FWrcmnZvnCWcqqDmE/OTNFmBDmEXDyTpI4bfg6Q2tiexrgl8SI5v2eyiXlJrcj5bSoJ4LuJQgXo8c708PxAFx2y/OSVoYwTP5J8YRR/1VXHxiHCmT0sZE23SdM7u14YQKkeYoKmsc6fefEMi1bZYDPx+STx5ZfMOTRlrs3+a1nBkGq9T9yOacrsSFJdQHtEGAqCW0ykLkvXt+/5CIcGteHr6F8SpyfGML9Qu50YEk5Ur2UJV4Na1Y6nboAfv3rusxtaQZjxpjj3dDXHFZz8p3YF3MBNgBZi6snnpQL5I/UqiBzsDEhJ3QQzVrAb6V/RM19Hl6mPD15qXJfZAFM2bF2z4pcB2NqhpxzARhyS4ro=
